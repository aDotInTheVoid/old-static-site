<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="390" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="373.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="373.00"> </text><svg id="frames" x="10" width="1180"><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.80%)</title><rect x="0.0000%" y="293" width="0.8032%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="303.50"></text></g><g><title>v2`alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 1.61%)</title><rect x="2.4096%" y="245" width="1.6064%" height="15" fill="rgb(217,0,24)"/><text x="2.6596%" y="255.50"></text></g><g><title>v2`core::ptr::drop_in_place (4 samples, 1.61%)</title><rect x="2.4096%" y="229" width="1.6064%" height="15" fill="rgb(221,193,54)"/><text x="2.6596%" y="239.50"></text></g><g><title>v2`_rjem_sdallocx (1 samples, 0.40%)</title><rect x="3.6145%" y="213" width="0.4016%" height="15" fill="rgb(248,212,6)"/><text x="3.8645%" y="223.50"></text></g><g><title>v2`_rjem_je_tcache_bin_flush_small (1 samples, 0.40%)</title><rect x="3.6145%" y="197" width="0.4016%" height="15" fill="rgb(208,68,35)"/><text x="3.8645%" y="207.50"></text></g><g><title>v2`_rjem_mallocx (1 samples, 0.40%)</title><rect x="4.8193%" y="213" width="0.4016%" height="15" fill="rgb(232,128,0)"/><text x="5.0693%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.40%)</title><rect x="5.2209%" y="197" width="0.4016%" height="15" fill="rgb(207,160,47)"/><text x="5.4709%" y="207.50"></text></g><g><title>v2`alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 1.20%)</title><rect x="5.2209%" y="213" width="1.2048%" height="15" fill="rgb(228,23,34)"/><text x="5.4709%" y="223.50"></text></g><g><title>v2`core::ptr::drop_in_place (2 samples, 0.80%)</title><rect x="5.6225%" y="197" width="0.8032%" height="15" fill="rgb(218,30,26)"/><text x="5.8725%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.40%)</title><rect x="6.0241%" y="181" width="0.4016%" height="15" fill="rgb(220,122,19)"/><text x="6.2741%" y="191.50"></text></g><g><title>v2`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.40%)</title><rect x="6.4257%" y="197" width="0.4016%" height="15" fill="rgb(250,228,42)"/><text x="6.6757%" y="207.50"></text></g><g><title>v2`core::ptr::drop_in_place (1 samples, 0.40%)</title><rect x="6.4257%" y="181" width="0.4016%" height="15" fill="rgb(240,193,28)"/><text x="6.6757%" y="191.50"></text></g><g><title>v2`_rjem_sdallocx (1 samples, 0.40%)</title><rect x="6.4257%" y="165" width="0.4016%" height="15" fill="rgb(216,20,37)"/><text x="6.6757%" y="175.50"></text></g><g><title>v2`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.80%)</title><rect x="6.4257%" y="213" width="0.8032%" height="15" fill="rgb(206,188,39)"/><text x="6.6757%" y="223.50"></text></g><g><title>v2`core::ptr::drop_in_place (1 samples, 0.40%)</title><rect x="6.8273%" y="197" width="0.4016%" height="15" fill="rgb(217,207,13)"/><text x="7.0773%" y="207.50"></text></g><g><title>v2`core::ptr::drop_in_place (1 samples, 0.40%)</title><rect x="6.8273%" y="181" width="0.4016%" height="15" fill="rgb(231,73,38)"/><text x="7.0773%" y="191.50"></text></g><g><title>v2`core::ptr::drop_in_place (2 samples, 0.80%)</title><rect x="7.2289%" y="213" width="0.8032%" height="15" fill="rgb(225,20,46)"/><text x="7.4789%" y="223.50"></text></g><g><title>v2`core::ptr::drop_in_place (2 samples, 0.80%)</title><rect x="7.2289%" y="197" width="0.8032%" height="15" fill="rgb(210,31,41)"/><text x="7.4789%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.80%)</title><rect x="7.2289%" y="181" width="0.8032%" height="15" fill="rgb(221,200,47)"/><text x="7.4789%" y="191.50"></text></g><g><title>v2`regex::literal::imp::LiteralSearcher::find (2 samples, 0.80%)</title><rect x="11.6466%" y="197" width="0.8032%" height="15" fill="rgb(226,26,5)"/><text x="11.8966%" y="207.50"></text></g><g><title>v2`memchr::x86::sse2::memchr (2 samples, 0.80%)</title><rect x="11.6466%" y="181" width="0.8032%" height="15" fill="rgb(249,33,26)"/><text x="11.8966%" y="191.50"></text></g><g><title>v2`regex::pikevm::Fsm&lt;I&gt;::add (10 samples, 4.02%)</title><rect x="12.4498%" y="197" width="4.0161%" height="15" fill="rgb(235,183,28)"/><text x="12.6998%" y="207.50">v2`r..</text></g><g><title>v2`regex::re_unicode::Regex::is_match (22 samples, 8.84%)</title><rect x="8.0321%" y="213" width="8.8353%" height="15" fill="rgb(221,5,38)"/><text x="8.2821%" y="223.50">v2`regex::re..</text></g><g><title>v2`regex::sparse::SparseSet::new (1 samples, 0.40%)</title><rect x="16.4659%" y="197" width="0.4016%" height="15" fill="rgb(247,18,42)"/><text x="16.7159%" y="207.50"></text></g><g><title>v2`_rjem_calloc (1 samples, 0.40%)</title><rect x="16.4659%" y="181" width="0.4016%" height="15" fill="rgb(241,131,45)"/><text x="16.7159%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.40%)</title><rect x="16.8675%" y="197" width="0.4016%" height="15" fill="rgb(249,31,29)"/><text x="17.1175%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (6 samples, 2.41%)</title><rect x="18.8755%" y="181" width="2.4096%" height="15" fill="rgb(225,111,53)"/><text x="19.1255%" y="191.50">li..</text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.40%)</title><rect x="21.2851%" y="181" width="0.4016%" height="15" fill="rgb(238,160,17)"/><text x="21.5351%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (1 samples, 0.40%)</title><rect x="21.6867%" y="181" width="0.4016%" height="15" fill="rgb(214,148,48)"/><text x="21.9367%" y="191.50"></text></g><g><title>v2`&lt;regex_syntax::hir::Hir as core::ops::drop::Drop&gt;::drop (2 samples, 0.80%)</title><rect x="22.0884%" y="181" width="0.8032%" height="15" fill="rgb(232,36,49)"/><text x="22.3384%" y="191.50"></text></g><g><title>v2`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.80%)</title><rect x="22.0884%" y="165" width="0.8032%" height="15" fill="rgb(209,103,24)"/><text x="22.3384%" y="175.50"></text></g><g><title>v2`_rjem_calloc (2 samples, 0.80%)</title><rect x="22.8916%" y="181" width="0.8032%" height="15" fill="rgb(229,88,8)"/><text x="23.1416%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Ivybridge (1 samples, 0.40%)</title><rect x="23.2932%" y="165" width="0.4016%" height="15" fill="rgb(213,181,19)"/><text x="23.5432%" y="175.50"></text></g><g><title>v2`_rjem_mallocx (2 samples, 0.80%)</title><rect x="23.6948%" y="181" width="0.8032%" height="15" fill="rgb(254,191,54)"/><text x="23.9448%" y="191.50"></text></g><g><title>v2`_rjem_je_tcache_alloc_small_hard (1 samples, 0.40%)</title><rect x="24.0964%" y="165" width="0.4016%" height="15" fill="rgb(241,83,37)"/><text x="24.3464%" y="175.50"></text></g><g><title>v2`_rjem_je_arena_tcache_fill_small (1 samples, 0.40%)</title><rect x="24.0964%" y="149" width="0.4016%" height="15" fill="rgb(233,36,39)"/><text x="24.3464%" y="159.50"></text></g><g><title>v2`arena_bin_malloc_hard (1 samples, 0.40%)</title><rect x="24.0964%" y="133" width="0.4016%" height="15" fill="rgb(226,3,54)"/><text x="24.3464%" y="143.50"></text></g><g><title>v2`_rjem_je_extent_alloc_wrapper (1 samples, 0.40%)</title><rect x="24.0964%" y="117" width="0.4016%" height="15" fill="rgb(245,192,40)"/><text x="24.3464%" y="127.50"></text></g><g><title>v2`_rjem_je_base_alloc_extent (1 samples, 0.40%)</title><rect x="24.0964%" y="101" width="0.4016%" height="15" fill="rgb(238,167,29)"/><text x="24.3464%" y="111.50"></text></g><g><title>v2`_rjem_je_extent_heap_remove_first (1 samples, 0.40%)</title><rect x="24.0964%" y="85" width="0.4016%" height="15" fill="rgb(232,182,51)"/><text x="24.3464%" y="95.50"></text></g><g><title>v2`regex::cache::imp::Cached&lt;T&gt;::new (3 samples, 1.20%)</title><rect x="24.4980%" y="181" width="1.2048%" height="15" fill="rgb(231,60,39)"/><text x="24.7480%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.40%)</title><rect x="25.3012%" y="165" width="0.4016%" height="15" fill="rgb(208,69,12)"/><text x="25.5512%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (2 samples, 0.80%)</title><rect x="26.1044%" y="165" width="0.8032%" height="15" fill="rgb(235,93,37)"/><text x="26.3544%" y="175.50"></text></g><g><title>v2`_rjem_mallocx (1 samples, 0.40%)</title><rect x="26.9076%" y="165" width="0.4016%" height="15" fill="rgb(213,116,39)"/><text x="27.1576%" y="175.50"></text></g><g><title>v2`alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.40%)</title><rect x="27.3092%" y="165" width="0.4016%" height="15" fill="rgb(222,207,29)"/><text x="27.5592%" y="175.50"></text></g><g><title>v2`&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.40%)</title><rect x="28.1124%" y="149" width="0.4016%" height="15" fill="rgb(206,96,30)"/><text x="28.3624%" y="159.50"></text></g><g><title>v2`regex::compile::Compiler::c (2 samples, 0.80%)</title><rect x="28.5141%" y="149" width="0.8032%" height="15" fill="rgb(218,138,4)"/><text x="28.7641%" y="159.50"></text></g><g><title>v2`_rjem_rallocx (1 samples, 0.40%)</title><rect x="28.9157%" y="133" width="0.4016%" height="15" fill="rgb(250,191,14)"/><text x="29.1657%" y="143.50"></text></g><g><title>v2`_rjem_je_arena_ralloc (1 samples, 0.40%)</title><rect x="28.9157%" y="117" width="0.4016%" height="15" fill="rgb(239,60,40)"/><text x="29.1657%" y="127.50"></text></g><g><title>v2`_rjem_je_arena_ralloc_no_move (1 samples, 0.40%)</title><rect x="28.9157%" y="101" width="0.4016%" height="15" fill="rgb(206,27,48)"/><text x="29.1657%" y="111.50"></text></g><g><title>v2`&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.61%)</title><rect x="30.5221%" y="133" width="1.6064%" height="15" fill="rgb(225,35,8)"/><text x="30.7721%" y="143.50"></text></g><g><title>v2`_rjem_rallocx (5 samples, 2.01%)</title><rect x="32.1285%" y="133" width="2.0080%" height="15" fill="rgb(250,213,24)"/><text x="32.3785%" y="143.50">v..</text></g><g><title>v2`_rjem_je_arena_ralloc (5 samples, 2.01%)</title><rect x="32.1285%" y="117" width="2.0080%" height="15" fill="rgb(247,123,22)"/><text x="32.3785%" y="127.50">v..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (4 samples, 1.61%)</title><rect x="32.5301%" y="101" width="1.6064%" height="15" fill="rgb(231,138,38)"/><text x="32.7801%" y="111.50"></text></g><g><title>v2`_rjem_rallocx (1 samples, 0.40%)</title><rect x="35.3414%" y="117" width="0.4016%" height="15" fill="rgb(231,145,46)"/><text x="35.5914%" y="127.50"></text></g><g><title>v2`_rjem_je_arena_ralloc (1 samples, 0.40%)</title><rect x="35.3414%" y="101" width="0.4016%" height="15" fill="rgb(251,118,11)"/><text x="35.5914%" y="111.50"></text></g><g><title>v2`regex::compile::Compiler::push_compiled (3 samples, 1.20%)</title><rect x="35.7430%" y="117" width="1.2048%" height="15" fill="rgb(217,147,25)"/><text x="35.9930%" y="127.50"></text></g><g><title>v2`_rjem_rallocx (1 samples, 0.40%)</title><rect x="36.5462%" y="101" width="0.4016%" height="15" fill="rgb(247,81,37)"/><text x="36.7962%" y="111.50"></text></g><g><title>v2`regex::compile::CompileClass::c_utf8_seq (12 samples, 4.82%)</title><rect x="34.1365%" y="133" width="4.8193%" height="15" fill="rgb(209,12,38)"/><text x="34.3865%" y="143.50">v2`reg..</text></g><g><title>v2`regex::compile::SuffixCache::get (5 samples, 2.01%)</title><rect x="36.9478%" y="117" width="2.0080%" height="15" fill="rgb(227,1,9)"/><text x="37.1978%" y="127.50">v..</text></g><g><title>v2`regex::compile::Compiler::fill (1 samples, 0.40%)</title><rect x="38.9558%" y="133" width="0.4016%" height="15" fill="rgb(248,47,43)"/><text x="39.2058%" y="143.50"></text></g><g><title>v2`regex::compile::Compiler::c_class (27 samples, 10.84%)</title><rect x="29.3173%" y="149" width="10.8434%" height="15" fill="rgb(221,10,30)"/><text x="29.5673%" y="159.50">v2`regex::compil..</text></g><g><title>v2`regex::compile::Compiler::push_split_hole (2 samples, 0.80%)</title><rect x="39.3574%" y="133" width="0.8032%" height="15" fill="rgb(210,229,1)"/><text x="39.6074%" y="143.50"></text></g><g><title>v2`_rjem_rallocx (2 samples, 0.80%)</title><rect x="39.3574%" y="117" width="0.8032%" height="15" fill="rgb(222,148,37)"/><text x="39.6074%" y="127.50"></text></g><g><title>v2`regex::compile::Compiler::c (32 samples, 12.85%)</title><rect x="27.7108%" y="165" width="12.8514%" height="15" fill="rgb(234,67,33)"/><text x="27.9608%" y="175.50">v2`regex::compile::..</text></g><g><title>v2`regex::compile::Compiler::fill (1 samples, 0.40%)</title><rect x="40.1606%" y="149" width="0.4016%" height="15" fill="rgb(247,98,35)"/><text x="40.4106%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.40%)</title><rect x="40.9639%" y="149" width="0.4016%" height="15" fill="rgb(247,138,52)"/><text x="41.2139%" y="159.50"></text></g><g><title>v2`regex::compile::Compiler::c (1 samples, 0.40%)</title><rect x="42.1687%" y="133" width="0.4016%" height="15" fill="rgb(213,79,30)"/><text x="42.4187%" y="143.50"></text></g><g><title>v2`regex::compile::Compiler::c_class (1 samples, 0.40%)</title><rect x="42.5703%" y="133" width="0.4016%" height="15" fill="rgb(246,177,23)"/><text x="42.8203%" y="143.50"></text></g><g><title>v2`_rjem_rallocx (1 samples, 0.40%)</title><rect x="42.5703%" y="117" width="0.4016%" height="15" fill="rgb(230,62,27)"/><text x="42.8203%" y="127.50"></text></g><g><title>v2`_rjem_je_arena_ralloc (1 samples, 0.40%)</title><rect x="42.5703%" y="101" width="0.4016%" height="15" fill="rgb(216,154,8)"/><text x="42.8203%" y="111.50"></text></g><g><title>v2`regex::compile::Compiler::c_capture (7 samples, 2.81%)</title><rect x="40.5622%" y="165" width="2.8112%" height="15" fill="rgb(244,35,45)"/><text x="40.8122%" y="175.50">v2..</text></g><g><title>v2`regex::compile::Compiler::c (5 samples, 2.01%)</title><rect x="41.3655%" y="149" width="2.0080%" height="15" fill="rgb(251,115,12)"/><text x="41.6155%" y="159.50">v..</text></g><g><title>v2`regex::compile::Compiler::fill (1 samples, 0.40%)</title><rect x="42.9719%" y="133" width="0.4016%" height="15" fill="rgb(240,54,50)"/><text x="43.2219%" y="143.50"></text></g><g><title>v2`regex::compile::Compiler::c_class (1 samples, 0.40%)</title><rect x="43.3735%" y="165" width="0.4016%" height="15" fill="rgb(233,84,52)"/><text x="43.6235%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (1 samples, 0.40%)</title><rect x="43.3735%" y="149" width="0.4016%" height="15" fill="rgb(207,117,47)"/><text x="43.6235%" y="159.50"></text></g><g><title>v2`_rjem_mallocx (1 samples, 0.40%)</title><rect x="43.7751%" y="149" width="0.4016%" height="15" fill="rgb(249,43,39)"/><text x="44.0251%" y="159.50"></text></g><g><title>v2`regex::compile::Compiler::c (1 samples, 0.40%)</title><rect x="44.1767%" y="149" width="0.4016%" height="15" fill="rgb(209,38,44)"/><text x="44.4267%" y="159.50"></text></g><g><title>v2`&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.20%)</title><rect x="44.9799%" y="117" width="1.2048%" height="15" fill="rgb(236,212,23)"/><text x="45.2299%" y="127.50"></text></g><g><title>v2`_rjem_rallocx (1 samples, 0.40%)</title><rect x="46.1847%" y="117" width="0.4016%" height="15" fill="rgb(242,79,21)"/><text x="46.4347%" y="127.50"></text></g><g><title>v2`_rjem_je_arena_ralloc (1 samples, 0.40%)</title><rect x="46.1847%" y="101" width="0.4016%" height="15" fill="rgb(211,96,35)"/><text x="46.4347%" y="111.50"></text></g><g><title>v2`_rjem_je_arena_ralloc_no_move (1 samples, 0.40%)</title><rect x="46.1847%" y="85" width="0.4016%" height="15" fill="rgb(253,215,40)"/><text x="46.4347%" y="95.50"></text></g><g><title>v2`_rjem_rallocx (1 samples, 0.40%)</title><rect x="46.9880%" y="101" width="0.4016%" height="15" fill="rgb(211,81,21)"/><text x="47.2380%" y="111.50"></text></g><g><title>v2`_rjem_je_arena_ralloc (1 samples, 0.40%)</title><rect x="46.9880%" y="85" width="0.4016%" height="15" fill="rgb(208,190,38)"/><text x="47.2380%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.40%)</title><rect x="46.9880%" y="69" width="0.4016%" height="15" fill="rgb(235,213,38)"/><text x="47.2380%" y="79.50"></text></g><g><title>v2`regex::compile::Compiler::push_compiled (1 samples, 0.40%)</title><rect x="47.3896%" y="101" width="0.4016%" height="15" fill="rgb(237,122,38)"/><text x="47.6396%" y="111.50"></text></g><g><title>v2`regex::compile::CompileClass::c_utf8_seq (5 samples, 2.01%)</title><rect x="46.5863%" y="117" width="2.0080%" height="15" fill="rgb(244,218,35)"/><text x="46.8363%" y="127.50">v..</text></g><g><title>v2`regex::compile::SuffixCache::get (2 samples, 0.80%)</title><rect x="47.7912%" y="101" width="0.8032%" height="15" fill="rgb(240,68,47)"/><text x="48.0412%" y="111.50"></text></g><g><title>v2`regex::compile::Compiler::c_repeat_zero_or_more (12 samples, 4.82%)</title><rect x="44.5783%" y="149" width="4.8193%" height="15" fill="rgb(210,16,53)"/><text x="44.8283%" y="159.50">v2`reg..</text></g><g><title>v2`regex::compile::Compiler::c_class (12 samples, 4.82%)</title><rect x="44.5783%" y="133" width="4.8193%" height="15" fill="rgb(235,124,12)"/><text x="44.8283%" y="143.50">v2`reg..</text></g><g><title>v2`regex::compile::Compiler::fill (2 samples, 0.80%)</title><rect x="48.5944%" y="117" width="0.8032%" height="15" fill="rgb(224,169,11)"/><text x="48.8444%" y="127.50"></text></g><g><title>v2`regex::compile::Compiler::c_dotstar (15 samples, 6.02%)</title><rect x="43.7751%" y="165" width="6.0241%" height="15" fill="rgb(250,166,2)"/><text x="44.0251%" y="175.50">v2`regex..</text></g><g><title>v2`regex_syntax::hir::Hir::repetition (1 samples, 0.40%)</title><rect x="49.3976%" y="149" width="0.4016%" height="15" fill="rgb(242,216,29)"/><text x="49.6476%" y="159.50"></text></g><g><title>v2`_rjem_je_extent_alloc_wrapper (1 samples, 0.40%)</title><rect x="57.0281%" y="85" width="0.4016%" height="15" fill="rgb(230,116,27)"/><text x="57.2781%" y="95.50"></text></g><g><title>v2`_rjem_je_extent_alloc_mmap (1 samples, 0.40%)</title><rect x="57.0281%" y="69" width="0.4016%" height="15" fill="rgb(228,99,48)"/><text x="57.2781%" y="79.50"></text></g><g><title>v2`_rjem_je_pages_map (1 samples, 0.40%)</title><rect x="57.0281%" y="53" width="0.4016%" height="15" fill="rgb(253,11,6)"/><text x="57.2781%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__mmap (1 samples, 0.40%)</title><rect x="57.0281%" y="37" width="0.4016%" height="15" fill="rgb(247,143,39)"/><text x="57.2781%" y="47.50"></text></g><g><title>v2`_rjem_mallocx (2 samples, 0.80%)</title><rect x="57.0281%" y="149" width="0.8032%" height="15" fill="rgb(236,97,10)"/><text x="57.2781%" y="159.50"></text></g><g><title>v2`_rjem_je_tcache_alloc_small_hard (2 samples, 0.80%)</title><rect x="57.0281%" y="133" width="0.8032%" height="15" fill="rgb(233,208,19)"/><text x="57.2781%" y="143.50"></text></g><g><title>v2`_rjem_je_arena_tcache_fill_small (2 samples, 0.80%)</title><rect x="57.0281%" y="117" width="0.8032%" height="15" fill="rgb(216,164,2)"/><text x="57.2781%" y="127.50"></text></g><g><title>v2`arena_bin_malloc_hard (2 samples, 0.80%)</title><rect x="57.0281%" y="101" width="0.8032%" height="15" fill="rgb(220,129,5)"/><text x="57.2781%" y="111.50"></text></g><g><title>v2`_rjem_je_extents_alloc (1 samples, 0.40%)</title><rect x="57.4297%" y="85" width="0.4016%" height="15" fill="rgb(242,17,10)"/><text x="57.6797%" y="95.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_trylock (1 samples, 0.40%)</title><rect x="57.4297%" y="69" width="0.4016%" height="15" fill="rgb(242,107,0)"/><text x="57.6797%" y="79.50"></text></g><g><title>v2`regex::compile::Compiler::compile_finish (22 samples, 8.84%)</title><rect x="49.7992%" y="165" width="8.8353%" height="15" fill="rgb(251,28,31)"/><text x="50.0492%" y="175.50">v2`regex::co..</text></g><g><title>v2`_rjem_sdallocx (2 samples, 0.80%)</title><rect x="57.8313%" y="149" width="0.8032%" height="15" fill="rgb(233,223,10)"/><text x="58.0813%" y="159.50"></text></g><g><title>v2`regex::compile::Compiler::fill (1 samples, 0.40%)</title><rect x="58.6345%" y="165" width="0.4016%" height="15" fill="rgb(215,21,27)"/><text x="58.8845%" y="175.50"></text></g><g><title>v2`regex::compile::Compiler::compile (84 samples, 33.73%)</title><rect x="25.7028%" y="181" width="33.7349%" height="15" fill="rgb(232,23,21)"/><text x="25.9528%" y="191.50">v2`regex::compile::Compiler::compile</text></g><g><title>v2`regex::compile::Compiler::push_compiled (1 samples, 0.40%)</title><rect x="59.0361%" y="165" width="0.4016%" height="15" fill="rgb(244,5,23)"/><text x="59.2861%" y="175.50"></text></g><g><title>v2`_rjem_calloc (6 samples, 2.41%)</title><rect x="59.4378%" y="165" width="2.4096%" height="15" fill="rgb(226,81,46)"/><text x="59.6878%" y="175.50">v2..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Ivybridge (5 samples, 2.01%)</title><rect x="59.8394%" y="149" width="2.0080%" height="15" fill="rgb(247,70,30)"/><text x="60.0894%" y="159.50">l..</text></g><g><title>v2`_rjem_mallocx (1 samples, 0.40%)</title><rect x="61.8474%" y="165" width="0.4016%" height="15" fill="rgb(212,68,19)"/><text x="62.0974%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (1 samples, 0.40%)</title><rect x="62.6506%" y="149" width="0.4016%" height="15" fill="rgb(240,187,13)"/><text x="62.9006%" y="159.50"></text></g><g><title>v2`regex::compile::Compiler::new (10 samples, 4.02%)</title><rect x="59.4378%" y="181" width="4.0161%" height="15" fill="rgb(223,113,26)"/><text x="59.6878%" y="191.50">v2`r..</text></g><g><title>v2`regex::prog::Program::new (3 samples, 1.20%)</title><rect x="62.2490%" y="165" width="1.2048%" height="15" fill="rgb(206,192,2)"/><text x="62.4990%" y="175.50"></text></g><g><title>v2`regex::literal::imp::LiteralSearcher::new (1 samples, 0.40%)</title><rect x="63.0522%" y="149" width="0.4016%" height="15" fill="rgb(241,108,4)"/><text x="63.3022%" y="159.50"></text></g><g><title>v2`regex::literal::imp::LiteralSearcher::new (1 samples, 0.40%)</title><rect x="63.4538%" y="181" width="0.4016%" height="15" fill="rgb(247,173,49)"/><text x="63.7038%" y="191.50"></text></g><g><title>v2`regex::literal::imp::FreqyPacked::new (1 samples, 0.40%)</title><rect x="63.4538%" y="165" width="0.4016%" height="15" fill="rgb(224,114,35)"/><text x="63.7038%" y="175.50"></text></g><g><title>v2`regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.40%)</title><rect x="63.8554%" y="181" width="0.4016%" height="15" fill="rgb(245,159,27)"/><text x="64.1054%" y="191.50"></text></g><g><title>v2`regex_syntax::hir::literal::Literals::union (1 samples, 0.40%)</title><rect x="64.2570%" y="181" width="0.4016%" height="15" fill="rgb(245,172,44)"/><text x="64.5070%" y="191.50"></text></g><g><title>v2`regex_syntax::hir::literal::Literals::cross_product (1 samples, 0.40%)</title><rect x="65.4618%" y="165" width="0.4016%" height="15" fill="rgb(236,23,11)"/><text x="65.7118%" y="175.50"></text></g><g><title>v2`regex_syntax::hir::literal::prefixes (4 samples, 1.61%)</title><rect x="64.6586%" y="181" width="1.6064%" height="15" fill="rgb(205,117,38)"/><text x="64.9086%" y="191.50"></text></g><g><title>v2`regex_syntax::hir::literal::prefixes (1 samples, 0.40%)</title><rect x="65.8635%" y="165" width="0.4016%" height="15" fill="rgb(237,72,25)"/><text x="66.1135%" y="175.50"></text></g><g><title>v2`regex_syntax::hir::literal::Literals::cross_add (1 samples, 0.40%)</title><rect x="65.8635%" y="149" width="0.4016%" height="15" fill="rgb(244,70,9)"/><text x="66.1135%" y="159.50"></text></g><g><title>v2`regex_syntax::hir::literal::Literals::cross_product (1 samples, 0.40%)</title><rect x="66.2651%" y="165" width="0.4016%" height="15" fill="rgb(217,125,39)"/><text x="66.5151%" y="175.50"></text></g><g><title>v2`regex_syntax::hir::literal::suffixes (2 samples, 0.80%)</title><rect x="66.2651%" y="181" width="0.8032%" height="15" fill="rgb(235,36,10)"/><text x="66.5151%" y="191.50"></text></g><g><title>v2`regex_syntax::hir::literal::suffixes (1 samples, 0.40%)</title><rect x="66.6667%" y="165" width="0.4016%" height="15" fill="rgb(251,123,47)"/><text x="66.9167%" y="175.50"></text></g><g><title>v2`regex_syntax::hir::literal::Literals::cross_add (1 samples, 0.40%)</title><rect x="66.6667%" y="149" width="0.4016%" height="15" fill="rgb(221,13,13)"/><text x="66.9167%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (1 samples, 0.40%)</title><rect x="68.2731%" y="165" width="0.4016%" height="15" fill="rgb(238,131,9)"/><text x="68.5231%" y="175.50"></text></g><g><title>v2`_rjem_rallocx (1 samples, 0.40%)</title><rect x="69.0763%" y="149" width="0.4016%" height="15" fill="rgb(211,50,8)"/><text x="69.3263%" y="159.50"></text></g><g><title>v2`_rjem_je_arena_ralloc (1 samples, 0.40%)</title><rect x="69.0763%" y="133" width="0.4016%" height="15" fill="rgb(245,182,24)"/><text x="69.3263%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (1 samples, 0.40%)</title><rect x="69.0763%" y="117" width="0.4016%" height="15" fill="rgb(242,14,37)"/><text x="69.3263%" y="127.50"></text></g><g><title>v2`&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (3 samples, 1.20%)</title><rect x="68.6747%" y="165" width="1.2048%" height="15" fill="rgb(246,228,12)"/><text x="68.9247%" y="175.50"></text></g><g><title>v2`regex_syntax::hir::translate::TranslatorI::push (1 samples, 0.40%)</title><rect x="69.4779%" y="149" width="0.4016%" height="15" fill="rgb(213,55,15)"/><text x="69.7279%" y="159.50"></text></g><g><title>v2`_rjem_rallocx (1 samples, 0.40%)</title><rect x="69.4779%" y="133" width="0.4016%" height="15" fill="rgb(209,9,3)"/><text x="69.7279%" y="143.50"></text></g><g><title>v2`_rjem_rallocx (1 samples, 0.40%)</title><rect x="69.8795%" y="165" width="0.4016%" height="15" fill="rgb(230,59,30)"/><text x="70.1295%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Ivybridge (1 samples, 0.40%)</title><rect x="70.2811%" y="133" width="0.4016%" height="15" fill="rgb(209,121,21)"/><text x="70.5311%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Nehalem (1 samples, 0.40%)</title><rect x="70.6827%" y="133" width="0.4016%" height="15" fill="rgb(220,109,13)"/><text x="70.9327%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (2 samples, 0.80%)</title><rect x="71.0843%" y="117" width="0.8032%" height="15" fill="rgb(232,18,1)"/><text x="71.3343%" y="127.50"></text></g><g><title>v2`&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 1.20%)</title><rect x="71.0843%" y="133" width="1.2048%" height="15" fill="rgb(215,41,42)"/><text x="71.3343%" y="143.50"></text></g><g><title>v2`_rjem_rallocx (1 samples, 0.40%)</title><rect x="71.8876%" y="117" width="0.4016%" height="15" fill="rgb(224,123,36)"/><text x="72.1376%" y="127.50"></text></g><g><title>v2`_rjem_je_arena_ralloc (1 samples, 0.40%)</title><rect x="71.8876%" y="101" width="0.4016%" height="15" fill="rgb(240,125,3)"/><text x="72.1376%" y="111.50"></text></g><g><title>v2`_rjem_je_arena_ralloc_no_move (1 samples, 0.40%)</title><rect x="71.8876%" y="85" width="0.4016%" height="15" fill="rgb(205,98,50)"/><text x="72.1376%" y="95.50"></text></g><g><title>v2`core::ptr::drop_in_place (6 samples, 2.41%)</title><rect x="70.2811%" y="165" width="2.4096%" height="15" fill="rgb(205,185,37)"/><text x="70.5311%" y="175.50">v2..</text></g><g><title>v2`&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (6 samples, 2.41%)</title><rect x="70.2811%" y="149" width="2.4096%" height="15" fill="rgb(238,207,15)"/><text x="70.5311%" y="159.50">v2..</text></g><g><title>v2`&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (1 samples, 0.40%)</title><rect x="72.2892%" y="133" width="0.4016%" height="15" fill="rgb(213,199,42)"/><text x="72.5392%" y="143.50"></text></g><g><title>v2`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (172 samples, 69.08%)</title><rect x="4.0161%" y="245" width="69.0763%" height="15" fill="rgb(235,201,11)"/><text x="4.2661%" y="255.50">v2`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut</text></g><g><title>v2`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (172 samples, 69.08%)</title><rect x="4.0161%" y="229" width="69.0763%" height="15" fill="rgb(207,46,11)"/><text x="4.2661%" y="239.50">v2`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut</text></g><g><title>v2`regex::re_unicode::Regex::new (140 samples, 56.22%)</title><rect x="16.8675%" y="213" width="56.2249%" height="15" fill="rgb(241,35,35)"/><text x="17.1175%" y="223.50">v2`regex::re_unicode::Regex::new</text></g><g><title>v2`regex::exec::ExecBuilder::build (139 samples, 55.82%)</title><rect x="17.2691%" y="197" width="55.8233%" height="15" fill="rgb(243,32,47)"/><text x="17.5191%" y="207.50">v2`regex::exec::ExecBuilder::build</text></g><g><title>v2`regex_syntax::parser::Parser::parse (15 samples, 6.02%)</title><rect x="67.0683%" y="181" width="6.0241%" height="15" fill="rgb(247,202,23)"/><text x="67.3183%" y="191.50">v2`regex..</text></g><g><title>v2`regex_syntax::ast::parse::ParserI&lt;P&gt;::char (1 samples, 0.40%)</title><rect x="72.6908%" y="165" width="0.4016%" height="15" fill="rgb(219,102,11)"/><text x="72.9408%" y="175.50"></text></g><g><title>v2`core::ptr::drop_in_place (1 samples, 0.40%)</title><rect x="73.0924%" y="245" width="0.4016%" height="15" fill="rgb(243,110,44)"/><text x="73.3424%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (1 samples, 0.40%)</title><rect x="73.0924%" y="229" width="0.4016%" height="15" fill="rgb(222,74,54)"/><text x="73.3424%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.40%)</title><rect x="87.1486%" y="229" width="0.4016%" height="15" fill="rgb(216,99,12)"/><text x="87.3986%" y="239.50"></text></g><g><title>v2`memchr::x86::sse2::memchr (1 samples, 0.40%)</title><rect x="87.5502%" y="229" width="0.4016%" height="15" fill="rgb(226,22,26)"/><text x="87.8002%" y="239.50"></text></g><g><title>v2`regex::literal::imp::LiteralSearcher::find (4 samples, 1.61%)</title><rect x="87.9518%" y="229" width="1.6064%" height="15" fill="rgb(217,163,10)"/><text x="88.2018%" y="239.50"></text></g><g><title>v2`memchr::x86::sse2::memchr (1 samples, 0.40%)</title><rect x="89.1566%" y="213" width="0.4016%" height="15" fill="rgb(213,25,53)"/><text x="89.4066%" y="223.50"></text></g><g><title>v2`regex::re_unicode::Regex::is_match (64 samples, 25.70%)</title><rect x="73.4940%" y="245" width="25.7028%" height="15" fill="rgb(252,105,26)"/><text x="73.7440%" y="255.50">v2`regex::re_unicode::Regex::is_match</text></g><g><title>v2`regex::pikevm::Fsm&lt;I&gt;::add (24 samples, 9.64%)</title><rect x="89.5582%" y="229" width="9.6386%" height="15" fill="rgb(220,39,43)"/><text x="89.8082%" y="239.50">v2`regex::pike..</text></g><g><title>v2`regex::re_unicode::Regex::new (1 samples, 0.40%)</title><rect x="99.1968%" y="245" width="0.4016%" height="15" fill="rgb(229,68,48)"/><text x="99.4468%" y="255.50"></text></g><g><title>v2`regex::exec::ExecBuilder::build (1 samples, 0.40%)</title><rect x="99.1968%" y="229" width="0.4016%" height="15" fill="rgb(252,8,32)"/><text x="99.4468%" y="239.50"></text></g><g><title>all (249 samples, 100%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(223,20,43)"/><text x="0.2500%" y="351.50"></text></g><g><title>v2`0x1 (249 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(229,81,49)"/><text x="0.2500%" y="335.50">v2`0x1</text></g><g><title>libdyld.dylib`start (249 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(236,28,36)"/><text x="0.2500%" y="319.50">libdyld.dylib`start</text></g><g><title>v2`main (247 samples, 99.20%)</title><rect x="0.8032%" y="293" width="99.1968%" height="15" fill="rgb(249,185,26)"/><text x="1.0532%" y="303.50">v2`main</text></g><g><title>v2`std::rt::lang_start::_{{closure}} (246 samples, 98.80%)</title><rect x="1.2048%" y="277" width="98.7952%" height="15" fill="rgb(249,174,33)"/><text x="1.4548%" y="287.50">v2`std::rt::lang_start::_{{closure}}</text></g><g><title>v2`v2::main (246 samples, 98.80%)</title><rect x="1.2048%" y="261" width="98.7952%" height="15" fill="rgb(233,201,37)"/><text x="1.4548%" y="271.50">v2`v2::main</text></g><g><title>v2`regex::utf8::decode_utf8 (1 samples, 0.40%)</title><rect x="99.5984%" y="245" width="0.4016%" height="15" fill="rgb(221,78,26)"/><text x="99.8484%" y="255.50"></text></g></svg></svg>